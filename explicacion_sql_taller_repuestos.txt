
Documento Explicativo del Script SQL – Base de Datos `taller_repuestos`

1. Introducción
Este script SQL crea y gestiona una base de datos denominada `taller_repuestos`, destinada a la gestión de citas, clientes, vehículos y soporte técnico en un taller mecánico. Incluye la creación de tablas, inserción de datos, procedimientos almacenados, disparadores y restricciones.

2. Tablas Principales

2.1. `clientes`
- Propósito: Almacena la información personal de los clientes.
- Campos:
  - id (PK, AUTO_INCREMENT)
  - nombre
  - apellidos
  - correo (único)

2.2. `coches`
- Propósito: Guarda la información de los vehículos.
- Campos:
  - COCHE_ID (PK)
  - MODELO, MARCA, ANIO, KILOMETRAJE
  - detalles: campo JSON con información adicional (ej. color, tipo de combustible)

2.3. `citas`
- Propósito: Registra las citas entre clientes y coches.
- Campos:
  - id (PK, AUTO_INCREMENT)
  - cliente_id (FK a `clientes`)
  - coche_id (FK a `coches`)
  - fecha

2.4. `soporte`
- Propósito: Registra mensajes de soporte técnico de los clientes.
- Campos:
  - id (PK, AUTO_INCREMENT)
  - cliente_id (FK a `clientes`)
  - mensaje

2.5. `log_coches`
- Propósito: Lleva un historial de acciones realizadas sobre los coches (por ahora, eliminación).
- Campos:
  - id (PK, AUTO_INCREMENT)
  - coche_id
  - accion
  - fecha (timestamp automático)

3. Procedimientos Almacenados

3.1. `RegistrarCita`
Permite registrar una cita entre un cliente y un coche en una fecha determinada. Incluye validaciones:
- Fecha no ocupada previamente
- Cliente y coche deben existir
- La fecha no puede ser posterior al año 2025

3.2. `RegistrarMensajeSoporte`
Permite registrar un mensaje en la tabla `soporte`. Valida:
- Que el mensaje no esté vacío
- Que el cliente exista

Ambos procedimientos incluyen manejo de errores y control de transacciones (rollback en caso de error).

4. Disparadores (Triggers)

`after_coche_delete`
- Se ejecuta después de eliminar un coche.
- Inserta automáticamente un registro en `log_coches` para dejar constancia del evento.

5. Restricciones e Índices

- Se crean claves primarias para todas las tablas.
- Claves foráneas:
  - citas.cliente_id → clientes.id
  - citas.coche_id → coches.COCHE_ID
  - soporte.cliente_id → clientes.id
- La columna correo en clientes es única.
- Se activan AUTO_INCREMENT en las claves primarias correspondientes.

6. Datos de Prueba

Se incluyen registros de ejemplo en todas las tablas (clientes, coches, citas, soporte, log_coches) para facilitar pruebas y validación de funcionalidad.

7. Conclusión

El script establece una estructura sólida para un sistema de gestión de taller, permitiendo:
- Registrar y validar citas
- Atender mensajes de soporte
- Controlar el historial de coches eliminados
- Mantener integridad referencial mediante restricciones y validaciones

Es una solución adecuada para un sistema básico de gestión de talleres con funciones ampliables.
